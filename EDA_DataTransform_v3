# Imports
import pandas as pd

# Load the Data into a data frame 
failure_data = pd.read_csv("failure_data.csv")

# Create a class for Data Transformations 
class DataTransform:
    def __init__(self, df):
        self.df = df

    def return_shape(self):
        return str(self.df.shape) 
    
    def return_info(self):
        return self.df.info()
    
    def return_first_row(self):
         return self.df.iloc[0]

    def unique_observations(self, column_name):
        return self.df[column_name].unique()
    
    def convert_column_to_category(self, column_name):
        '''
        converts the dtype of column to 'category'
        '''
        self.df[column_name] = pd.Categorical(self.df[column_name])
        return self.df
    
    def create_dummies_from_column(self, column_name):
        dummies_df = pd.get_dummies(self.df[column_name], dtype=int)
        return dummies_df 

    def left_join_dataframes(self, right_df, left_index=True, right_index=True):
        '''
        This functions joins on the index of the LEFT DataFrame
        '''
        joined_df = pd.merge(self.df, right_df, left_index=left_index, right_index=right_index)
        return joined_df

transform = DataTransform(failure_data)

# Note: All functions have been tested indvidually and work as expected 
#Â Problem: When all the code is run together there is a break. When the Class is run first and the modules sepertely and individually the code works 

# Test
transform.return_shape()
transform.return_info()
transform.return_first_row()
transform.unique_observations('UDI')
transform.convert_column_to_category('Type').info()
transform.create_dummies_from_column('Type')

# Test
df1 = transform.create_dummies_from_column('Type')
transform.left_join_dataframes(df1)

# Transformations I'd like to apply squentially: 
    # 1) Convert 'Type" into a categorical dtype
    # 2) Create dummy variables using the 'Type' column 
    # 3) LEFT Join the Type dummy variables onto the failure_data






